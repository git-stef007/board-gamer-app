rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Allow users to read/write only their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow users to:
    // - read groups they're a member of
    // - create groups where they are both creator and one of the members
    // - update 'lastMessage' only if they are members
    match /groups/{groupId} {
      allow read: if request.auth != null &&
                  request.auth.uid in resource.data.memberIds;

      allow create: if request.auth != null &&
                    request.resource.data.createdBy == request.auth.uid &&
                    request.auth.uid in request.resource.data.memberIds;

      // Only allow updating 'lastMessage' field if user is a group member
      allow update: if request.auth != null &&
                    request.auth.uid in resource.data.memberIds &&
                    request.resource.data.diff(resource.data).changedKeys()
                      .hasOnly(['lastMessage', 'updatedAt']);

      allow delete: if false;
    }

    // Allow group members to read/write messages in their groups
    match /groups/{groupId}/messages/{messageId} {
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/groups/$(groupId)) &&
        request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberIds;
    }

    // Deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
